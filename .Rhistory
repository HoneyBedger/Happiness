xMat <- cbind(1, x, splineTerms)
fit <- lm(y ~ xMat)
yHat <- predict(fit)
plot(x, y)
lines(x, yHat)
summary(fit)
rf_fit$overall[1]
```{r echo = T, results='hide'}
library(caret); library(randomForest); library(ggplot2); library(gridExtra)
```
```{r echo = T}
if(!file.exists("pml-training.csv")){
trainURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(trainURL, destfile = "pml-training.csv")}
if(!file.exists("pml-testing.csv")){
testURL <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(testURL, destfile = "pml-testing.csv")}
pml_train <- read.csv("pml-training.csv", na.strings = c("NA", ""))
pml_test <- read.csv("pml-testing.csv", na.strings = c("NA", ""))
str(pml_train)
```
So, we have 160 variables, some of them are averages, maxima, minima etc, thus they are
NAs almost everywhere. So we get rid of them.
```{r echo = T}
pml_train <- pml_train[, colSums(is.na(pml_train)) < 1]
```
Next, the first 7 variables seem to be auxiliary and unnessessary for the model.
From the figure below (it's just one figure with 7 plots :) ) one can see that only the first variable, `X` correlates with
the `classe` outcome. But the fact that `X` has almost perfect correlation with `classe`
only means that the rows are sorted by class, so variable `X` should not be used
when building a model.
```{r echo = T}
p1 <- ggplot(pml_train, aes(y = classe, x = X)) + geom_point(stat="identity") +
labs(x = "X", y = "classe") + theme(axis.text.x=element_blank())
p2 <- ggplot(pml_train, aes(y = classe, x = user_name)) + geom_point(stat="identity") +
labs(x = "user_name", y = "classe") + theme(axis.text.x=element_blank())
p3 <- ggplot(pml_train, aes(y = classe, x = raw_timestamp_part_1)) + geom_point(stat="identity") +
labs(x = "raw_timestamp_part_1", y = "classe") + theme(axis.text.x=element_blank())
p4 <- ggplot(pml_train, aes(y = classe, x = raw_timestamp_part_2)) + geom_point(stat="identity") +
labs(x = "raw_timestamp_part_2", y = "classe") + theme(axis.text.x=element_blank())
p5 <- ggplot(pml_train, aes(y = classe, x = cvtd_timestamp)) + geom_point(stat="identity") +
labs(x = "cvtd_timestamp", y = "classe") + theme(axis.text.x=element_blank())
p6 <- ggplot(pml_train, aes(y = classe, x = new_window)) + geom_point(stat="identity") +
labs(x = "new_window", y = "classe") + theme(axis.text.x=element_blank())
p7 <- ggplot(pml_train, aes(y = classe, x = num_window)) + geom_point(stat="identity") +
labs(x = "num_window", y = "classe") + theme(axis.text.x=element_blank())
fig1 <- grid.arrange(p1, p2, p3, p4, p5, p6, p7, nrow = 3)
set.seed(241291)
rf_fit_final <- randomForest(x = pml_train[8:59], y = pml_train$classe)
rf_fit_final$overall[1]
rf_fit_final$overall
rf_fit_final
rf_fit_final$predicted
rf_fit_final$err.rate
rf_fit_final$test
rf_fit_final$confusion
summary(rf_fit_final)
rf_fit_final
rf_fit_final[1]
rf_fit_final[2]
rf_fit_final[3]
rf_fit_final[[1]]
rf_fit_final[[2]]
rf_fit_final[[3
]]
rf_fit_final[[4]]
rf_fit_final[[5]]
rf_fit_final[[6
]]
rf_fit_final[[7]]
rf_fit_final[[8]]
rf_fit_final[[9]]
rf_fit_final[[10
]]
rf_fit_final[[11]]
rf_fit_final[[12]]
summary(pml_train)
names(pml_train)
head(str(pml_train))
str(pml_train)[[1:15,50:90]]
str(pml_train)[[1:15,50:60]]
setwd("R_files/Dev_Data_Prod-ex2")
?colSums
?show
?LM
?lm
?dgamma
?show
show
showMethods("show")
getMethod("show")
getClass("show")
getMethod("show","numeric")
getMethod("show",numeric)
getMethod("show", "namedList")
happiness <- data.frame(
Country = c('Switzerland', 'Iceland', 'Denmark', 'Norway','Canada', 'Finland',
'Netherlands', 'Sweden', 'New Zealand', 'Australia', 'Israel',
'Costa Rica', 'Austria', 'Mexico', 'United States', 'Brazil',
'Luxembourg', 'Ireland', 'Belgium', 'United Arab Emirates',
'United Kingdom', 'Oman', 'Venezuela', 'Singapore', 'Panama',
'Germany', 'Chile', 'Qatar', 'France', 'Argentina', 'Czech Republic',
'Uruguay', 'Colombia', 'Thailand', 'Saudi Arabia', 'Spain', 'Malta',
'Taiwan', 'Kuwait', 'Suriname', 'Trinidad and Tobago', 'El Salvador',
'Guatemala', 'Uzbekistan', 'Slovakia', 'Japan', 'South Korea', 'Ecuador',
'Bahrain', 'Italy', 'Bolivia', 'Moldova', 'Paraguay', 'Kazakhstan',
'Slovenia', 'Lithuania', 'Nicaragua', 'Peru', 'Belarus', 'Poland',
'Malaysia', 'Croatia', 'Libya', 'Russia', 'Jamaica', 'North Cyprus',
'Cyprus', 'Algeria', 'Kosovo', 'Turkmenistan', 'Mauritius', 'Hong Kong',
'Estonia', 'Indonesia', 'Vietnam', 'Turkey', 'Kyrgyzstan', 'Nigeria',
'Bhutan', 'Azerbaijan', 'Pakistan', 'Jordan', 'Montenegro', 'China',
'Zambia', 'Romania', 'Serbia', 'Portugal', 'Latvia', 'Philippines',
'Somaliland region', 'Morocco', 'Macedonia', 'Mozambique', 'Albania',
'Bosnia and Herzegovina', 'Lesotho', 'Dominican Republic', 'Laos',
'Mongolia', 'Swaziland', 'Greece', 'Lebanon', 'Hungary', 'Honduras',
'Tajikistan', 'Tunisia', 'Palestinian Territories', 'Bangladesh', 'Iran',
'Ukraine', 'Iraq', 'South Africa', 'Ghana', 'Zimbabwe', 'Liberia', 'India',
'Sudan', 'Haiti', 'Congo (Kinshasa)', 'Nepal', 'Ethiopia', 'Sierra Leone',
'Mauritania', 'Kenya', 'Djibouti', 'Armenia', 'Botswana', 'Myanmar',
'Georgia', 'Malawi', 'Sri Lanka', 'Cameroon', 'Bulgaria', 'Egypt',
'Yemen', 'Angola', 'Mali', 'Congo (Brazzaville)', 'Comoros', 'Uganda',
'Senegal', 'Gabon', 'Niger', 'Cambodia', 'Tanzania', 'Madagascar',
'Central African Republic', 'Chad', 'Guinea', 'Ivory Coast',
'Burkina Faso', 'Afghanistan', 'Rwanda', 'Benin', 'Syria',
'Burundi', 'Togo'),
Happiness_Level = c(7.5869998932, 7.5609998703, 7.5269999504, 7.521999836, 7.4270000458,
7.4060001373, 7.3779997826, 7.3639998436, 7.2859997749, 7.2839999199,
7.2779998779, 7.2259998322, 7.1999998093, 7.1869997978, 7.118999958,
6.9829998016, 6.9460000992, 6.9400000572, 6.9369997978, 6.9010000229,
6.867000103, 6.853000164, 6.8099999428, 6.7979998589, 6.7859997749,
6.75, 6.6700000763, 6.611000061, 6.5749998093, 6.5739998817,
6.5050001144, 6.4850001335, 6.4770002365, 6.4549999237, 6.4109997749,
6.3289999962, 6.3020000458, 6.2979998589, 6.2950000763, 6.2690000534,
6.1680002213, 6.1300001144, 6.123000145, 6.0029997826, 5.9949998856,
5.9869999886, 5.984000206, 5.9749999046, 5.9600000381, 5.9479999542,
5.8899998665, 5.888999939, 5.8779997826, 5.8550000191, 5.8480000496,
5.8330001831, 5.8280000687, 5.8239998817, 5.8130002022, 5.7909998894,
5.7699999809, 5.7589998245, 5.7540001869, 5.7160000801, 5.7090001106,
5.6950001717, 5.6890001297, 5.6050000191, 5.5890002251, 5.5479998589,
5.4770002365, 5.4739999771, 5.4289999008, 5.3990001678, 5.3600001335,
5.3319997787, 5.2859997749, 5.2680001259, 5.2529997826, 5.2119998932,
5.1939997673, 5.1919999123, 5.1919999123, 5.1399998665, 5.1290001869,
5.1240000725, 5.123000145, 5.1020002365, 5.0980000496, 5.0729999542,
5.0570001602, 5.0130000114, 5.0069999695, 4.9710001945, 4.9590001106,
4.9489998817, 4.8979997635, 4.8850002289, 4.8759999275, 4.8740000725,
4.867000103, 4.8569998741, 4.8390002251, 4.8000001907, 4.7880001068,
4.7859997749, 4.7389998436, 4.7150001526, 4.6939997673, 4.6859998703,
4.6810002327, 4.6770000458, 4.6420001984, 4.632999897, 4.6100001335,
4.5710000992, 4.5650000572, 4.5500001907, 4.5180001259, 4.5170001984,
4.513999939, 4.5120000839, 4.5069999695, 4.4359998703, 4.4190001488,
4.368999958, 4.3499999046, 4.3319997787, 4.3070001602, 4.2969999313,
4.2919998169, 4.2709999084, 4.251999855, 4.2179999352, 4.1939997673,
4.0770001411, 4.0329999924, 3.9949998856, 3.989000082, 3.9560000896,
3.9309999943, 3.9040000439, 3.8959999084, 3.8450000286, 3.8190000057,
3.7809998989, 3.6809999943, 3.6779999733, 3.6670000553, 3.6559998989,
3.6549999714, 3.5869998932, 3.5750000477, 3.4649999142, 3.3399999142,
3.006000042, 2.9049999714, 2.8389999866))
rank <- 45
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = happiness[rank,1]), color="black",
linewidth = 2)
library(ggplot2)
happiness <- data.frame(
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = happiness[rank,1]), color="black",
linewidth = 2)
)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014")
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = happiness[rank,1]), color="black")
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black")
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+1), y = 6.5, label = happiness[rank,1]),
size = 4)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+5), y = 6.5, label = happiness[rank,1]),
size = 4)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+6), y = 6.5, label = happiness[rank,1]),
size = 4)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5, label = happiness[rank,1]),
size = 4)
rank <- 158
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5, label = happiness[rank,1]),
size = 4)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank), y = 6.5, label = happiness[rank,1]),
size = 4)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "      ")),
size = 4)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        ")),
size = 4)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        ")),
size = 6)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        ")),
size = 6) +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.0,
label = round(happiness[rank,2], 3)),
size = 6)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        "))) +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.0,
label = round(happiness[rank,2], 3)),
size = 6)
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        "))) +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.0,
label = round(happiness[rank,2], 3)))
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        "))) +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.0,
label = paste(round(happiness[rank,2], 3), "        ")))
rank <- 66
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        "))) +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.0,
label = paste(round(happiness[rank,2], 3), "        ")))
?geom_text
ggplot(happiness, aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = rank), color="black") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.5,
label = paste(happiness[rank,1], "        ")),
fill = "white") +
geom_text(data = happiness,
mapping = aes(x = (rank+10), y = 6.2,
label = paste(round(happiness[rank,2], 3), "        ")))
runApp()
library(shiny)
runApp()
runApp()
?shinyUI
runApp()
?fluidRow
?sidebarPanel
?mainPanel
runApp()
runApp()
rm(rank)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?numericInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(happiness,
aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014")
+ geom_vline(aes(xintercept = 1), color="black")
ggplot(happiness,
aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014")
+ geom_vline(aes(xintercept = "1"), color="black")
View(happiness)
ggplot(happiness,
aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014")
+ geom_vline(aes(xintercept = 50), color="black")
ggplot(happiness,
aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014")
+ geom_vline(data = happiness,
aes(xintercept = 50), color="black")
ggplot(happiness,
aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014")
+ geom_vline(data = happiness,
mapping = aes(xintercept = 50), color="black")
ggplot(happiness,
aes(reorder(Country, -Happiness_Level), Happiness_Level)) +
geom_bar(stat="identity", fill = "red") +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
labs(x = "", y = "Average happiness level") +
labs(title = "Average happiness level across countries, 2014") +
geom_vline(data = happiness,
mapping = aes(xintercept = 50), color="black")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='honeybedger',
token='8D02549087542EE29CBEFA251D1372E6',
secret='dOsyjD9Zpx8K3Rj+V4M0b8X+YwKpL1uJq1ikR6GK')
library(shinyapps)
shinyapps::deployApp('.')
shiny::runApp()
shinyapps::deployApp('.')
shinyapps::deployApp('.')
runApp()
shinyapps::deployApp('.')
shinyapps::deployApp('.')
shinyapps::deployApp('.')
shiny::runApp()
